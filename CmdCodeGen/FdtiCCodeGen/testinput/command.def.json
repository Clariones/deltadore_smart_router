{
	outputFolder: "/home/clariones/Desktop/works/jobs/FDTI_Linux/git/deltadore_router/CppPrjoects/TestFDTI",
	templateBaseFolder: "testinput/template",
	subFolder : "udpclt",
	configs: [
		{
			name: "control light",
			template: "ApiMapping",
			description: "Control light devices",
			hasNetwork: true,
			hasNode: true,
			paramName: "option",
			mapping: {
				"off" : "switchOffLight",
				"on": "switchOnLight",
				"ram-up" : "rampUpLight",
				"ram-down" : "ramDownLight",
				"stop" : "stopLight",
				"stand-out" : "standOutLight",
				"alarm-pairing" : "alarmPairingLight",
				"toggle" : "toggleLight",
				"preset-1" : "preset1Light",
				"preset-2" : "preset2Light"
			}			
		},
		{
			name: "control light color",
			template: "SimpleApi",
			description: "Control light color",
			apiName : "setLightColor",
			hasNetwork: true,
			hasNode: true,
			params : [
				{
					paramName: "red",
					type : "int",
					note: "red value of the color",
					range: [0, 255]
				},
				{
					paramName: "green",
					type : "int",
					note: "green value of the color",
					range: [0, 255]
				},
				{
					paramName: "blue",
					type : "int",
					note: "blue value of the color",
					range: [0, 255]
				}
			]
		},
		{
			name: "control roller shutter",
			template: "ApiMapping",
			description: "control roller-shutter device",
			hasNetwork: true,
			hasNode: true,
			paramName: "option",
			mapping: {
				"up" : "openRollerShutter",
				"down": "closeRollerShutter",
				"up-slow" : "openRollerShutterSlowly",
				"down-slow" : "closeRollerShutterSlowly",
				"stop" : "stopRollerShutter"
			}
		},
		{
			name: "register node",
			template: "NetworkApi",
			description: "Register a new device into an appointed network",
			apiName : "registerNode",
			hasNetwork: true,
			hasNode: false
		},
		{
			name: "delete node",
			template: "NetworkApi",
			description: "Delete node from network",
			apiName : "deleteNode",
			hasNetwork: true,
			hasNode: true
		},
		{
			name: "get topology",
			template: "NetworkApi",
			description: "Get currently recognized network and nodes",
			apiName : "getTopology",
			hasNetwork: false,
			hasNode: false
		},
		{
			name: "force refresh topology",
			template: "NetworkApi",
			description: "Get currently recognized network and nodes",
			apiName : "refreshTopology",
			hasNetwork: false,
			hasNode: false
		},
		{
			name: "query light status",
			template: "SimpleApi",
			description: "query light status information",
			apiName : "queryLightStatus",
			hasNetwork: true,
			hasNode: true,
			params : []
		},
		{
			name: "query light color",
			template: "SimpleApi",
			description: "query light color information",
			apiName : "queryLightColor",
			hasNetwork: true,
			hasNode: true,
			params : []
		},
		{
			name: "query light info",
			template: "SimpleApi",
			description: "query light manufacture information",
			apiName : "queryLightInfo",
			hasNetwork: true,
			hasNode: true,
			params : []
		},
		{
			name: "query roller shutter status",
			template: "SimpleApi",
			description: "query roller shutter status information",
			apiName : "queryRollerShutterStatus",
			hasNetwork: true,
			hasNode: true,
			params : []
		},
		{
			name: "query roller shutter info",
			template: "SimpleApi",
			description: "query roller shutter manufacture information",
			apiName : "queryRollerShutterInfo",
			hasNetwork: true,
			hasNode: true,
			params : []
		}
	]
}